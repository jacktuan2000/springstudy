<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        ">
        
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
    <context:property-placeholder location="classpath:config/core/develop.properties" />
    
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
           
                <value>com.gejj.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.pswd}" />
   </bean>
   

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   

   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


      <!-- 
    <mvc:resources mapping="/resources/**" location="/resources/" />
	

	

   	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.pswd}" />
	</bean>
	
	
	 <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>com.gejj.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
               		 <prop key="hibernate.hbm2ddl.auto">create</prop>
               		 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<prop key="hibernate.c3p0.min_size">${jdbc.pool.min_size}</prop>
					<prop key="hibernate.c3p0.max_size">${jdbc.pool.max_size}</prop>
					<prop key="hibernate.c3p0.timeout">${jdbc.pool.timeout}</prop>
					<prop key="hibernate.c3p0.max_statements">${jdbc.pool.max_statements}</prop>
					<prop key="hibernate.search.default.indexBase">${hibernate.search.index}</prop>
					<prop key="hibernate.search.analyzer">org.wltea.analyzer.lucene.IKAnalyzer</prop>
            </props>
        </property>
    </bean>
	

  
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   
   	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="transactionTemplate"
			class="org.springframework.transaction.support.TransactionTemplate">
			<property name="transactionManager" ref="transactionManager"></property>
	</bean>


	<mvc:view-resolvers>  
	    <mvc:content-negotiation>  
	        <mvc:default-views>  
	            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">   
	            </bean>              
	        </mvc:default-views>  
	    </mvc:content-negotiation>  
	    <mvc:jsp cache-views="false" prefix="/WEB-INF/views/" suffix=".jsp"/>  
	</mvc:view-resolvers>  
   
  

   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
       
  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config expose-proxy="true">
        只对业务逻辑层实施事务
        <aop:pointcut id="txPointcut" expression="execution(* com.lei.demo.service..*.*(..))" />
        Advisor定义，切入点和通知分别为txPointcut、txAdvice
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config> 

    
    <beans profile="develop">
		<bean id="managerPropertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:config/core/develop.properties</value>
				</list>
			</property>
		</bean>
	</beans>
	    -->
</beans>