<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="config" class="com.ycnet.belink.core.Config">
		<property name="basePackage" value="com.ycnet.belink"></property>
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- <task:annotation-driven/> -->
	<cache:annotation-driven/>
	<context:component-scan base-package="com.ycnet.belink">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="domainFacades"></property>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="dictionaries"></property>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="combos"></property>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="selectMap"></property>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="keywordMap"></property>
				</bean>
			</set>
		</property>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message_zh_CN</value>
				<value>errorMessage_zh_CN</value>
				<value>systemConfig_zh_CN</value>
				<value>fsnsSql_zh_CN</value>
				<value>interfaceUrl_zh_CN</value>
				<value>importService</value>
			</list>
		</property>
	</bean>
	
	<bean id="themeResolver" class="org.springframework.web.servlet.theme.SessionThemeResolver">
		<property name="defaultThemeName" value="theme_standard" />
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	
	<bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<property name="mappingLocation" value="classpath:config/oxm/mapping.xml"></property>
		<property name="encoding" value="UTF-8"></property>
	</bean>
	<bean id="unmarshaller" parent="marshaller" />
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
				</bean> -->
				<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/portal/"/>
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"></bean>
			</list>
		</property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.belink.com"/>
		<property name="username" value="noreply@belink.com"></property>
		<property name="password" value="1QAZ2wsx"></property> 
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
	</bean>
	
	<bean id="memcachedResource" class="com.ycnet.belink.core.memcached.MemcachedResource" init-method="init">
		<property name="sysConfig" ref="messageSource" />
	</bean>
	<rabbit:connection-factory id="connectionFactory" host="${queue.rabbit.host}"/>
	
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" routing-key="userFootmarkQueue" channel-transacted="true"/>
	
	<rabbit:admin connection-factory="connectionFactory"/>
	
	<rabbit:queue name="eventPublishQueue"/>
	
	<rabbit:listener-container connection-factory="connectionFactory">
		<rabbit:listener queues="eventPublishQueue" ref="eventPublishTracker"/>
	</rabbit:listener-container>

	<beans profile="develop">
		<bean id="managerPropertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:config/core/develop.properties</value>
				</list>
			</property>
		</bean>

<!-- 		<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"> -->
<!-- 			<property name="uniqueResourceName" value="mysql_jndi1" /> -->
<!-- 			<property name="xaDataSourceClassName" -->
<!-- 				value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" /> -->
<!-- 			<property name="poolSize" value="10" /> -->
<!-- 			<property name="maxPoolSize" value="45" /> -->
<!-- 			<property name="minPoolSize" value="3" /> -->
<!-- 			<property name="xaProperties"> -->
<!-- 				<props> -->
<!-- 					<prop key="user">${jdbc.username}</prop> -->
<!-- 					<prop key="password">${jdbc.pswd}</prop> -->
<!-- 					<prop key="url">${jdbc.url}</prop> -->
<!-- 				</props> -->
<!-- 			</property> -->
<!-- 			<property name="testQuery" value="select 1" /> -->
<!-- 		</bean> -->

<!-- 		<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"> -->
<!-- 			<property name="uniqueResourceName" value="mysql_jndi2" /> -->
<!-- 			<property name="xaDataSourceClassName" -->
<!-- 				value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" /> -->
<!-- 			<property name="poolSize" value="10" /> -->
<!-- 			<property name="maxPoolSize" value="45" /> -->
<!-- 			<property name="minPoolSize" value="3" /> -->
<!-- 			<property name="xaProperties"> -->
<!-- 				<props> -->
<!-- 					<prop key="user">${jdbc.username2}</prop> -->
<!-- 					<prop key="password">${jdbc.pswd2}</prop> -->
<!-- 					<prop key="url">${jdbc.url2}</prop> -->
<!-- 				</props> -->
<!-- 			</property> -->
<!-- 			<property name="testQuery" value="select 1" /> -->
<!-- 		</bean> -->
		
<!-- 		<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate" -->
<!-- 			scope="singleton" lazy-init="default"> -->
<!-- 			<property name="environment"> -->
<!-- 				<props> -->
<!-- 					<prop key="java.naming.factory.initial"> -->
<!-- 						weblogic.jndi.WLInitialContextFactory -->
<!-- 					</prop> -->
<!-- 					<prop key="java.naming.provider.url">t3://localhost:7001</prop> -->
<!-- 				</props> -->
<!-- 			</property> -->
<!-- 		</bean> -->

<!-- 		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!-- 			<property name="jndiName"> -->
<!-- 				<value>JDBC ORACLE</value> -->
<!-- 			</property> -->
<!-- 			<property name="jndiTemplate"> -->
<!-- 				<ref local="jndiTemplate" /> -->
<!-- 			</property> -->
<!-- 		</bean> -->
	
	
	
<!-- 		<bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!-- 			<property name="jndiName"> -->
<!-- 				<value>JDBC MYSQL</value> -->
<!-- 			</property> -->
<!-- 			<property name="jndiTemplate"> -->
<!-- 				<ref local="jndiTemplate" /> -->
<!-- 			</property> -->
<!-- 		</bean> -->

		

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver2}" />
			<property name="url" value="${jdbc.url2}" />
			<property name="username" value="${jdbc.username2}" />
			<property name="password" value="${jdbc.pswd2}" />
		</bean>
		
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="packagesToScan" value="com.ycnet.belink.domain" />
			<property name="schemaUpdate" value="false" />
			<property name="namingStrategy" ref="namingStrategy"></property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.dialect">${hibernate.dialect2}</prop>
					<prop key="hibernate.c3p0.min_size">${jdbc.pool.min_size}</prop>
					<prop key="hibernate.c3p0.max_size">${jdbc.pool.max_size}</prop>
					<prop key="hibernate.c3p0.timeout">${jdbc.pool.timeout}</prop>
					<prop key="hibernate.c3p0.max_statements">${jdbc.pool.max_statements}</prop>
					<prop key="hibernate.search.default.indexBase">${hibernate.search.index}</prop>
					<prop key="hibernate.search.analyzer">org.wltea.analyzer.lucene.IKAnalyzer</prop>
				</props>
			</property>
		</bean>

		<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>

		<bean id="transactionTemplate"
			class="org.springframework.transaction.support.TransactionTemplate">
			<property name="transactionManager" ref="transactionManager"></property>
		</bean>

		<bean id="transactionManager"
			class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>

	</beans>



	<beans> 
<!-- 	    Enables the Spring Task @Scheduled programming model   -->
	    <task:executor id="executor" pool-size="5" />  
	    <task:scheduler id="scheduler" pool-size="10" />  
	    <task:annotation-driven executor="executor" scheduler="scheduler" />  
	</beans>  
	
	

	
</beans>
